name: CI

on: 
  workflow_call:

jobs:
  build:
    name: Build (${{ matrix.name }})
    runs-on:  ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux
            os: ubuntu-latest

          - name: macOS
            os: macos-latest

          - name: Windows
            os: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y pkg-config libfreetype6-dev libcairo2-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install pkg-config freetype cairo

      - name: Setup MSYS2 (Windows)
        if: matrix.os == 'windows-latest'
        uses: msys2/setup-msys2@v2
        with:
          msystem: MINGW64
          update: true
          install: >-
            mingw-w64-x86_64-gcc
            make
            mingw-w64-x86_64-pkg-config
            mingw-w64-x86_64-cairo
            mingw-w64-x86_64-freetype

      - name: Build the tools (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          make clean
          make all -j

      - name: Build and Package the tools (Windows)
        if: matrix.os == 'windows-latest'
        shell: msys2 {0}
        run: |
          make clean
          make all -j
          make windows-debug
          
          # Create Windows distribution with DLLs
          mkdir -p dist/windows
          cp obj/*.exe dist/windows/
          
          # Copy required DLLs for renderer
          cp /mingw64/bin/libfreetype-6.dll dist/windows/
          cp /mingw64/bin/libcairo-2.dll dist/windows/
          cp /mingw64/bin/libbrotlidec.dll dist/windows/
          cp /mingw64/bin/libbz2-1.dll dist/windows/
          
          # Copy any additional DLLs that might be needed
          ldd obj/blackbox_render.exe | grep "/mingw64/bin" | awk '{print $3}' | xargs -I {} cp {} dist/windows/ 2>/dev/null || true

      - name: Publish build artifacts (Linux/macOS)
        if: matrix.os != 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Blackbox tools ${{matrix.name}}
          path: |
            obj/blackbox_decode
            obj/blackbox_render
            obj/encoder_testbed
          retention-days: 60
          overwrite: true

      - name: Publish build artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: Blackbox tools ${{matrix.name}}
          path: |
            dist/windows/
          retention-days: 60
          overwrite: true
